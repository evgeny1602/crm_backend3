import {MigrationInterface, QueryRunner} from "typeorm";

export class EventsProcessDatetimeNullable1625215294438 implements MigrationInterface {
    name = 'EventsProcessDatetimeNullable1625215294438'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "temporary_events" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "description" varchar NOT NULL, "start_datetime" datetime NOT NULL, "process_datetime" datetime NOT NULL, "eventtypeId" integer, "clientId" integer, "dealId" integer, "userId" integer, "processUserId" integer, CONSTRAINT "FK_ed96e905c054665c94d866a04b4" FOREIGN KEY ("processUserId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_9929fa8516afa13f87b41abb263" FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_746d6af21c8a93c794a2ba1ffa0" FOREIGN KEY ("dealId") REFERENCES "deals" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_2b2274cd969274843abe3219685" FOREIGN KEY ("clientId") REFERENCES "clients" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_a38fe4ad7b992c1dceee3fccd7c" FOREIGN KEY ("eventtypeId") REFERENCES "eventtypes" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_events"("id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId") SELECT "id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId" FROM "events"`);
        await queryRunner.query(`DROP TABLE "events"`);
        await queryRunner.query(`ALTER TABLE "temporary_events" RENAME TO "events"`);
        await queryRunner.query(`CREATE TABLE "temporary_events" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "description" varchar NOT NULL, "start_datetime" datetime NOT NULL, "process_datetime" datetime, "eventtypeId" integer, "clientId" integer, "dealId" integer, "userId" integer, "processUserId" integer, CONSTRAINT "FK_ed96e905c054665c94d866a04b4" FOREIGN KEY ("processUserId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_9929fa8516afa13f87b41abb263" FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_746d6af21c8a93c794a2ba1ffa0" FOREIGN KEY ("dealId") REFERENCES "deals" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_2b2274cd969274843abe3219685" FOREIGN KEY ("clientId") REFERENCES "clients" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_a38fe4ad7b992c1dceee3fccd7c" FOREIGN KEY ("eventtypeId") REFERENCES "eventtypes" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_events"("id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId") SELECT "id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId" FROM "events"`);
        await queryRunner.query(`DROP TABLE "events"`);
        await queryRunner.query(`ALTER TABLE "temporary_events" RENAME TO "events"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "events" RENAME TO "temporary_events"`);
        await queryRunner.query(`CREATE TABLE "events" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "description" varchar NOT NULL, "start_datetime" datetime NOT NULL, "process_datetime" datetime NOT NULL, "eventtypeId" integer, "clientId" integer, "dealId" integer, "userId" integer, "processUserId" integer, CONSTRAINT "FK_ed96e905c054665c94d866a04b4" FOREIGN KEY ("processUserId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_9929fa8516afa13f87b41abb263" FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_746d6af21c8a93c794a2ba1ffa0" FOREIGN KEY ("dealId") REFERENCES "deals" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_2b2274cd969274843abe3219685" FOREIGN KEY ("clientId") REFERENCES "clients" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_a38fe4ad7b992c1dceee3fccd7c" FOREIGN KEY ("eventtypeId") REFERENCES "eventtypes" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "events"("id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId") SELECT "id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId" FROM "temporary_events"`);
        await queryRunner.query(`DROP TABLE "temporary_events"`);
        await queryRunner.query(`ALTER TABLE "events" RENAME TO "temporary_events"`);
        await queryRunner.query(`CREATE TABLE "events" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "description" varchar NOT NULL, "start_datetime" datetime NOT NULL, "process_datetime" datetime NOT NULL, "eventtypeId" integer, "clientId" integer, "dealId" integer, "userId" integer, "processUserId" integer, CONSTRAINT "FK_ed96e905c054665c94d866a04b4" FOREIGN KEY ("processUserId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_9929fa8516afa13f87b41abb263" FOREIGN KEY ("userId") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_746d6af21c8a93c794a2ba1ffa0" FOREIGN KEY ("dealId") REFERENCES "deals" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_2b2274cd969274843abe3219685" FOREIGN KEY ("clientId") REFERENCES "clients" ("id") ON DELETE SET NULL ON UPDATE NO ACTION, CONSTRAINT "FK_a38fe4ad7b992c1dceee3fccd7c" FOREIGN KEY ("eventtypeId") REFERENCES "eventtypes" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "events"("id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId") SELECT "id", "description", "start_datetime", "process_datetime", "eventtypeId", "clientId", "dealId", "userId", "processUserId" FROM "temporary_events"`);
        await queryRunner.query(`DROP TABLE "temporary_events"`);
    }

}
